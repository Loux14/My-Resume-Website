{"ast":null,"code":"var _jsxFileName = \"/Users/lucasg/Desktop/Notion-Page/src/References.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './References.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction References() {\n  _s();\n  const refs = [{\n    id: 1,\n    name: 'John Doe',\n    age: 30,\n    city: 'New York'\n  }, {\n    id: 2,\n    name: 'Jane Smith',\n    age: 25,\n    city: 'Los Angeles'\n  }, {\n    id: 3,\n    name: 'Bob Johnson',\n    age: 35,\n    city: 'Chicago'\n  }];\n  const [selectedRow, setSelectedRow] = useState(null);\n\n  // Fonction pour mettre à jour l'ID de la ligne sélectionnée\n  const handleRowClick = id => {\n    if (selectedRow === id) {\n      setSelectedRow(null); // Déselectionne si déjà sélectionné\n    } else {\n      setSelectedRow(id); // Sinon, sélectionne la ligne\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: refs.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: selectedRow === item.id ? 'selected' : '',\n          onClick: () => handleRowClick(item.id),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(References, \"uNqdeC4/AX7zbEPErixrXmI9Bw8=\");\n_c = References;\nexport default References;\nvar _c;\n$RefreshReg$(_c, \"References\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","References","_s","refs","id","name","age","city","selectedRow","setSelectedRow","useState","handleRowClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onClick","_c","$RefreshReg$"],"sources":["/Users/lucasg/Desktop/Notion-Page/src/References.js"],"sourcesContent":["import React from 'react';\nimport './References.css';\n\nfunction References() {\n  const refs = [\n    { id: 1, name: 'John Doe', age: 30, city: 'New York' },\n    { id: 2, name: 'Jane Smith', age: 25, city: 'Los Angeles' },\n    { id: 3, name: 'Bob Johnson', age: 35, city: 'Chicago' },\n  ];\n\n  const [selectedRow, setSelectedRow] = useState(null);\n\n  // Fonction pour mettre à jour l'ID de la ligne sélectionnée\n  const handleRowClick = (id) => {\n    if (selectedRow === id) {\n      setSelectedRow(null); // Déselectionne si déjà sélectionné\n    } else {\n      setSelectedRow(id); // Sinon, sélectionne la ligne\n    }\n  };\n\n  return (\n    <div className=\"table-container\">\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Age</th>\n            <th>City</th>\n          </tr>\n        </thead>\n        <tbody>\n          {refs.map((item) => (\n            <tr \n              key={item.id}\n              className={selectedRow === item.id ? 'selected' : ''}\n              onClick={() => handleRowClick(item.id)}\n            >\n              <td>{item.id}</td>\n              <td>{item.name}</td>\n              <td>{item.age}</td>\n              <td>{item.city}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default References;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}